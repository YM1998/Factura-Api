buildscript {

	ext {
		//dependencies service
		springVersion = '2.0.5.RELEASE'
		springBootVersion ='2.1.6.RELEASE'
		postgresVersion = '42.2.5'
		sonarQubeVersion ='2.6.2'
		lombokVersion = '1.18.12'
		log4jVersion = '2.11.1'
		commonsLangVersion ='3.9'
		mockitoVersion = '2.8.47'
		powerMockitoVersion = '1.7.4'
		commonFrameworkVersion = '1.0-local-SNAPSHOT'
		swaggerVersion = '2.9.2'
		springOauthVersion = '2.3.4.RELEASE'
		springSecurityJwt = '1.0.9.RELEASE'

		// component version settings
		releaseNumber = '1'
		sprintNumber = '0'
		buildNumber = System.getenv('BUILD_NUMBER') == null ? 'local' : System.getenv('BUILD_NUMBER')
		sonarQubeSite = ''
		nexusRepository = ''
		nexusUser = System.getenv('NEXUS_USER')
		nexusPass = System.getenv('NEXUS_PASS')
	}

	repositories {
		mavenCentral()
		maven {
			url "https://repo.spring.io/milestone"

		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarQubeVersion}"
	}
}

/** ########### RUNTIME PLUGINS  **/

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'maven'

/** ########### CODE QUALITY PLUGINS  **/

apply plugin: 'pmd'
apply plugin: "org.sonarqube"
apply plugin: 'war'

group = 'co.com.system.invoice'
archivesBaseName = 'facturacion-api'
version = "${releaseNumber}.${sprintNumber}-${buildNumber}-SNAPSHOT"


sourceCompatibility = 1.8


/** ########### CODE QUALITY CONFIGURATION  **/

apply from: 'service-dependencies.gradle'

apply plugin: 'war'
war {
	baseName = 'factura-api'
	version = '0.0.1-SNAPSHOT'
}


repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}


bootRun {
	sourceResources sourceSets.main
}

dependencies {
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	implementation 'org.springframework:spring-context-support'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.2.5'
	//implementation 'org.postgresql:postgresql:42.2.5'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:2.8.47'
	//annotationProcessor 'org.projectlombok:lombok:1.18.24'
	//testCompileOnly 'org.projectlombok:lombok:1.18.24'
	//testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation "org.mapstruct:mapstruct:1.4.2.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	implementation 'org.springframework.security:spring-security-jwt:1.0.9.RELEASE'
	implementation 'org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE'
	implementation group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.11.RELEASE'
	implementation group: 'org.xhtmlrenderer', name: 'flying-saucer-pdf', version: '9.1.20'

}



